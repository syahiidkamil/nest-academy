[
  {
    "title": "The Pragmatic Programmer: Your Journey To Mastery, 20th Anniversary Edition (2nd Edition)",
    "author": "David Thomas, Andrew Hunt",
    "publisher": "Addison-Wesley Professional",
    "description": "Straight from the programming trenches, The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process--taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. "
  },
  {
    "title": "Clean Code in JavaScript: Develop reliable, maintainable, and robust JavaScript",
    "author": "James Padolsey",
    "publisher": "Packt Publishing",
    "description": "Building robust apps starts with creating clean code. In this book, you’ll explore techniques for doing this by learning everything from the basics of JavaScript through to the practices of clean code. You’ll write functional, intuitive, and maintainable code while also understanding how your code affects the end user and the wider community."
  },
  {
    "title": "Software Engineering at Google: Lessons Learned from Programming Over Time",
    "author": "Titus Winters, Tom Manshreck, Hyrum Wright",
    "publisher": "O'Reilly Media",
    "description": "This book is titled Software Engineering at Google. What precisely do we mean by software engineering? What distinguishes “software engineering” from “programming” or “computer science”? And why would Google have a unique perspective to add to the corpus of previous software engineering literature written over the past 50 years? The terms “programming” and “software engineering” have been used interchangeably for quite some time in our industry, although each term has a different emphasis and different implications. University students tend to study computer science and get jobs writing code as “programmers.”"
  }
]